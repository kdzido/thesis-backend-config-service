buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE')
    }
}

group 'pl.pja.13868.news'
version '1.0.0-SNAPSHOT'

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin    // TODO build docker image with gradle plugin

sourceCompatibility = 1.8
targetCompatibility = 1.8

import org.apache.tools.ant.filters.*

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Camden.SR7"
    }
}

dependencies {
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.cloud:spring-cloud-starter-eureka-server')

    testCompile "org.codehaus.groovy:groovy-all:${groovyVersion}"
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.spockframework:spock-core:${spockVersion}"
    testCompile("cglib:cglib-nodep:${cglibVersion}")

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

jar {
    baseName = 'eureka-server'
}

task copyJars(dependsOn: jar, type: Copy) {
    from jar
    into "$buildDir/dockerfile"
}

task copyDockerFiles(dependsOn: [copyJars], type: Copy) {
    from 'src/docker'
    into "$buildDir/dockerfile"

    String springBootJar = "eureka-server-${project.version}.jar"
    filter(ReplaceTokens, tokens: [springBootJar: springBootJar])
}

build.dependsOn copyDockerFiles

